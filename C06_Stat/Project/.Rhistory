DT<-fread("c3w1q1p5.csv")
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1])
rowMeans(DT)[DT$SEX==1]
rowMeans(DT)[DT$SEX==2]
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
mean(DT[DT$SEX==1,]$pwgtp15)
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
sapply(split(DT$pwgtp15,DT$SEX),mean)
csv01<-read.csv("c3w1q1.csv")
View(csv01)
csv02<-subset(csv01,csv01$VAL=2=4)
csv02<-subset(csv01,csv01$VAL==24)
View(csv02)
xml1<-xmlTreeParse("c3w1q1.xml",useInternal=T)
root1<-xmlRoot(xml1)
xpathSApply(root1,"//zipcode",xmlValue)
zip1<-xpathSApply(root1,"//zipcode",xmlValue)
zip2<-as.numeric(zip1)
zip3<-subset(zip2,zip2==21231)
acs<-read.csv("getdata_data_ss06pid.csv")
library(sqldf)
install.packages(sqldf)
library("sqldf")
install.packages("sqldf")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
q2ans<-sqldf("select pwgtp1 from acs where AGEP < 50")
View(acs)
names(acs)
q2uni<-unique(acs$AGEP)
q2uni
q2u<-sqldf("select unique AGEP from acs")
q2u<-sqldf("select distinct AGEP from acs")
View(`q2u`)
read.lines
readlines
library(XML)
conn<-url("http://biostat.jhsph.edu/~jleek/contact.html")
leekhtml<-readLines(conn)
close(conn)
leekurl<-"http://biostat.jhsph.edu/~jleek/contact.html"
leekhtml2<-htmlTreeParse(leekurl,useInternalNodes=T)
view(leekhtml2)
leekhtml2
names(leekhtml2)
leekhtml3<-htmlParse(leekurl)
leekhtml3
leekhtml4<-capture.output(leekhtml3)
leekhtm4{1}
leekhtm4[1]
leekhtml4[1]
nchar(leekhtml4[10])
nchar(leekhtml4[20])
nchar(leekhtml4[30])
nchar(leekhtml4[100])
nchar(leekhtml4[0])
leekhtml4[0]
head(leekhtml4,3)
leekhtml4[11]
nchar(leekhtml4[11])
leekhtml4[11]
conn<-"http://biostat.jhsph.edu/~jleek/contact.html"
conn<-url("http://biostat.jhsph.edu/~jleek/contact.html")
leekhtml5<-readLines(conn)
close(conn)
nchar(leekhtml[10])
nchar(leekhtml[20])
nchar(leekhtml[30])
nchar(leekhtml[100])
conn<-url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
close(conn)
conn<-"https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
conn<-url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
q5for<-readLines(conn)
close(conn)
conn<-"https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
read.fwf
?read.fwf
q2for<-read.fwf(conn)
q2for<-read.fwf(conn,widths=c(9,4,4,4,4,4,4,4,4),header=T,sep=" ",skip=3)
q2for<-read.fwf("getdata_wksst8110.for",widths=c(9,4,4,4,4,4,4,4,4),header=T,sep=" ",skip=3)
q2for<-read.fwf("getdata_wksst8110.for",widths=c(9,4,4,4,4,4,4,4,4),header=T,sep=" ",skip=4)
q2for<-read.fwf("getdata_wksst8110.for",widths=c(9,4,4,4,4,4,4,4,4),skip=4)
q2for<-read.fwf("getdata_wksst8110.for",widths=c(9,4,4,4,4,4,4,4,4),skip=4)
head(q2for,1)
q2for<-read.fwf("getdata_wksst8110.for",widths=c(10,4,4,4,4,4,4,4,4),skip=4)
head(q2for,1)
q2for<-read.fwf("getdata_wksst8110.for",widths=c(15,4,4,4,4,4,4,4,4),skip=4)
head(q2for,1)
q2for<-read.fwf("getdata_wksst8110.for",widths=c(10,4,4,4,4,4,4,4,4),skip=4,sep="     ")
q2for<-read.fwf("getdata_wksst8110.for",widths=c(10,4,4,4,4,4,4,4,4),skip=4,sep=" ")
q2for<-read.fwf("getdata_wksst8110.for",widths=c(10,4,4,4,4,4,4,4,4),skip=4,sep="")
q2for<-read.fwf("getdata_wksst8110.for",widths=c(10,4,4,4,4,4,4,4,4),skip=4,sep="     ")
q2for<-read.fwf("getdata_wksst8110.for",widths=c(10,5,4,4,5,4,4,5,4,4,5,4,4),skip=4)
head(q2for,1)
head(q2for$V1,3)
sum(q2for$V6)
?download.file()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="c3w3q1.csv",method="curl")
q1csv<-read.csv("c3w3q1.csv")
head(q1csv,3)
head(q1csv,1)
str(q1csv)
head(q1csv,1)
summary(q1csv)
head(q1csv,1)
?dcast()
dcast
?dcast
a_which<-which(with(q1csv,ACR>=3 & AGS>=6)
)
head(a_which)
which(with(q1csv,ACR>=3 & AGS>=6))
View(`q1csv`)
a<-q1csv$ACR>=3&q1csv$AGS>=6
which(a)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile="c2w3q2.jpg")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile="c2w3q2.jpg",mothod="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile="c2w3q2.jpg",method="curl")
library(JPEG)
library(jpeg)
install.packages(jpeg)
install.packages(JPEG)
install.packages("jpeg")
?readjpeg
?readJPEG()
q2jpg<-readJPEG("c3w3q2.jpg",native=T)
library(jpeg)
?readJPEG()
q2jpg<-readJPEG("c3w3q2.jpg",native=T)
q2jpg<-readJPEG("c2w3q2.jpg",native=T)
quantile(q2jpg,probs=(0.3,0,8))
quantile(q2jpg,probs=(0.3,0.8))
quantile(q2jpg,probs=(0.3))
quantile(q2jpg,probs=(0.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",destfile="c3w3q3a.csv",method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",destfile="c3w3q3b.csv",method="curl")
q3csva<-read.csv("c3w3q3a.csv")
q3csvb<-read.csv("c3w3q3b.csv")
head(q3csva,2)
View(`q3csva`)
View(`q3csvb`)
View(`q3csva`)
q3csvc<-subset(q3csva,q3csva[5:194,1:2])
?subset
q3csvc<-q3csva[5:194,1:2]
head(q3csvc)
names(q3csvc)
names(q3csvc)<-c("CID","GDP2012")
names(q3csvc)
head(q3csvc)
View(`q3csvb`)
?merge
q3merge<-merge(q3csvc,q3csvb,by.x="CID",by.y="CountryCode",all=T)
View(`q3merge`)
which(q3merge!=NA)
which(q3merge$GDP2012!=NA)
q3merge2<-subset(q3merge,!is.na(q3merge$GDP2012))
View(`q3merge2`)
?sort
?order
q3merge3<-order(q3merge2,decreasing=T)
q3merge3<-q3merge2[with(q3merge2,order(-GDP2012)),]
View(`q3merge3`)
q3merge3<-q3merge2[order(-q3merge2$GDP2012)]
q3merge3<-q3merge2[order(-q3merge[,2])]
q3merge3<-q3merge2[order(-q3merge2[,2])]
class(q3merge2$GDP2012)
q3merge3<-q3merge2[order(-q3merge2[,3])]
q3merge2[order(-GDP2012)]
q3merge2[order(-q3merge2$GDP2012)]
class(q3merge2)
names(q3merge2)
q3merge3<-q3merge2[order(-GDP2012),]
q3merge3<-q3merge2[order(-q3merge2$GDP2012),]
View(`q3merge3`)
q3merge2a<-q3merge2
as.numeric(q3merge2a$GDP2012)
class(13merge2a$GDP2012)
class(q3merge2a$GDP2012)
q3merge2b<-as.numeric(q3merge2a$GDP2012)
View(`q3merge2a`)
q3merge2b<-sapply(q3merge2a[,3],as.numeric)
q3merge2a<-sapply(q3merge2a[,3],as.numeric)
q3merge2a<-sapply(q3merge2[,3],as.numeric(as.character()))
q3merge2a<-q3merge2
q3merge2a$GDP2012<-as.numeric(q3merge2a$GDP2012)
calss(q3merge2a$GDP2012)
class(q3merge2a$GDP2012)
q3merge3<-q3merge2a[order(-GDP2012),]
q3merge3<-q3merge2a[order(-q3merge2a$GDP2012),]
View(`q3merge3`)
View(`q3merge`)
q3merge1<-q3merge
q3merge1$GDP2012<-as.numeric(q3merge1$GDP2012)
q3merge3<-q3merge1[order(q3merge1$GDP2012,na.last=T,decreasing=T)]
q3merge3<-q3merge1[order(q3merge1$GDP2012,na.last=T,decreasing=T),]
View(`q3merge3`)
View(`q3csvc`)
q3csvd<-q3csvc[,2:3]
q3csvd<-q3csvc(,2:3)
q3csvd<-q3csvc[,2:3]
q3csvd<-q3csvc[1:190,2:3]
q3csvd<-q3csvc[1:190,1:3]
View(`q3csvb`)
View(`q3merge`)
View(`q3merge3`)
View(`q3merge2`)
?sort
q3merge3<-q3merge2[sort(q3merge2$GDP2012,decreasing=T),]
View(`q3merge3`)
View(`q3merge2`)
q3merge2a<-q3merge2
q3merge2a$GDP2012<-as.numeric(q3merge2a$GDP2012)
q3merge3<-q3merge2a[sort(q3merge2a$GDP2012,decreasing=T),]
View(`q3merge3`)
View(`q3merge2a`)
View(`q3merge2`)
q3merge2a<-q3merge2
View(`q3merge2a`)
q3merge3<-q3merge2a[sort(q3merge2a$GDP2012,decreasing=T),]
View(`q3merge3`)
class(q3merge2a$GDP2012)
q3merge2a$GDP2012<-as.numeric(q3merge2a$GDP2012)
class(q3merge2a$GDP2012)
q3merge3<-q3merge2a[sort(q3merge2a$GDP2012,decreasing=T),]
View(`q3merge3`)
View(`q3merge2a`)
q3merge2b<-q3merge2
q3merge2b$GDP2012<-as.numeric(as.character(q3merge2b$GDP2012))
View(`q3merge2b`)
class(q3merge2b$GDP2012)
q3merge3<-q3merge2b[sort(q3merge2b$GDP2012,decreasing=T),]
View(`q3merge3`)
q3merge3<-q3merge2b[order(q3merge2b$GDP2012,decreasing=T),]
View(`q3merge3`)
View(`q3csvb`)
View(`q3csva`)
View(`q3merge2b`)
View(`q3merge3`)
q4g1<-subset(q3merge3,q3merge3$Income.Group=="High Income: OECD")
q4g1<-subset(q3merge3,q3merge3$Income.Group=="High income: OECD")
q4g2<-subset(q3merge3,q3merge3$Income.Group=="High income: nonOECD")
?ave
?mean
mean(q4g1$GDP2012)
mean(q4g2$GDP2012)
q3merge3a<-q3merge3
?quantile
quantile(q3merge3a,probs=seq(0,1,0.2))
quantile(q3merge3a$GDP2012,probs=seq(0,1,0.2))
q3quan<-cut(q3merge3a,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,0.2),include.lowest=T))
q3quan<-cut(q3merge3a,breaks=quantile(q3merge3a$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T))
class(q3merge3a$GDP2012)
?cut
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,0.2),include.lowest=T))
q3quan
table(q3quam)
table(q3quan)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,0.2),include.lowest=T,right=F))
table(q3quan)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,0.2),include.lowest=T,right=FALSE))
table(q3quan)
?aggregate
aggregate(q3merge3a$CID,list(Nations=q3quan),FUN=list)
class(q3merge3a$CID)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,0.2),include.lowest=F))
table(q3quan)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=F))
table(q3quan)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,length=5),include.lowest=F))
table(q3quan)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,length=6),include.lowest=F))
table(q3quan)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,length=6),include.lowest=T,right=F))
table(q3quan)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0.01,1,length=6),include.lowest=T,right=F))
table(q3quan)
?quantile
?cut
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,length=6),include.lowest=T,right=F))
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,length=6),include.lowest=T,right=T))
table(q3quan)
q3merge3b<-q3merge3a
q3merge3b$GDP2012<-as.factor(q3merge3b$GDP2012)
q3merge3b$GDP2012<-as.integer(as.character(q3merge3b$GDP2012))
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,probs=seq(0,1,length=6),include.lowest=T,right=T))
table(q3quan)
q3merge3b$GDP2012<-as.factor(q3merge3b$GDP2012)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,probs=seq(0,1,length=6),include.lowest=T,right=T))
q3merge3b$GDP2012<-as.integer(as.character(q3merge3b$GDP2012))
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,probs=seq(0,1,length=6),Type=1))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,probs=seq(0,1,length=6),Type=2))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,probs=seq(0,1,length=6),Type=3))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.21,0.41,0.61,0.81,1),Type=3))
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.21,0.41,0.61,0.81,1))
)
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),right=F))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),right=T))
table(q3quan)
q3merge3b$CID<-as.character(q3merge3B$CID)
q3merge3b$CID<-as.character(q3merge3b$CID)
aggregate(q3merge3b$CID,list(Nations=q3quan),FUN=list)
aggregate(q3merge3b$GDP2012,list(Nations=q3quan),FUN=list)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T,dig.lab=3))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T,dig.lab=2))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T,dig.lab=3,ordered_result=FALSE))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T,dig.lab=3,ordered_result=T))
table(q3quan)
q3merge3c<-rbind(q3merge3b,c("XXX",0))
tail(q3merge3c)
q3quan<-cut(q3merge3c$GDP2012,breaks=quantile(q3merge3c$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T,dig.lab=3,ordered_result=T))
class(q3merge3c$GDP2012)
q3merge3c$GDP2012<-as.integer(q3merge3c$GDP2012)
q3quan<-cut(q3merge3c$GDP2012,breaks=quantile(q3merge3c$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T,dig.lab=3,ordered_result=T))
tail(q3merge3c)
table(q3quan)
which(with(q3merge3c,GDP2012<=38 & Income.Group=="Lower middle income")
)
View(`q3merge2`)
View(`q3merge3`)
View(`q3csva`)
q3cvsd<-q3cvsa[5:235,1:2]
q3cvsd<-q3csva[5:235,1:2]
View(`q3cvsd`)
names(q3csvd)<-c("CID","GDP")
names(q3cvsd)<-c("CID","GDP")
q3csvd<-q3csvd
q3csvd<-q3cvsd
q3csvd$GDP<-as.integer(as.numeric(q3cvsd$GDP))
?merge
mergeq3<-(q3csvd,q3csvb,by.x="CID",by.y="CountryCode",all=T)
mergeq3<-merge(q3csvd,q3csvb,by.x="CID",by.y="CountryCode",all=T)
View(mergeq3)
View(`q3merge`)
View(`q3merge3`)
View(`q3csva`)
View(`q3csvd`)
View(`q3csvc`)
View(`q3merge`)
View(`q3merge2`)
View(`q3merge`)
mergeq3<-merge(q3csvc,q3csvb,by.x="CID",by.y="CountryCode",all=F)
View(mergeq3)
mergeq3_a<-mergeq3
View(mergeq3_a)
mergeq3_a$GDP2012<-as.integer(as.character(mergeq3_a$GDP2012))
mergeq3_b<-mergeq3_a[order(-GDP2012),]
mergeq3_b<-mergeq3_a[order(-mergeq3_a$GDP2012),]
View(mergeq3_b)
q3quan_a<-cut(mergeq3_b$GDP2012,breaks=quantile(mergeq3_b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),right=T,inclde.lowest=T))
table(q3quan_a)
qnorm(95,mean=1100,sd=75)
qnorm(0.95,mean=1100,sd=75)
qnorm(0.95,mean=1100,sd=7.5)
pbinom(4,size=5,prob=0.5)+pbinom(5,size=5,prob=0.5)
pbinom(4,size=5,prob=0.5)
dbinom(4,size=5,prob=0.5)
dbinom(4,size=5,prob=0.5)+dbinom(5,size=5,prob=0.5)
dpois(10,15)
ppois(10,15)
qt(9,0.95)
qt(0.95,df=8
)
1100+c(-1,1)*qt(0.975,8)*10/3
-2+qt(0.975,8)*2.1/3
-2+qt(0.975,8)*2.6/3
-2+qt(0.975,8)*0.3/3
2*3/qt(0.975,8)
(3-5)/sqrt(1.28/10)
-2+c(-1,1)*qt(0.975,18)*sqrt(1.28/10)
c(-1,1)*qnorm(0.975,mean=-2,sd=sqrt(2.5/100))
c(-1,1)*qnorm(0.975,mean=0,sd=sqrt(2.5/100))
c(-1,1)*qnorm(0.975,mean=-2,sd=sqrt(2.5/100))
qnorm(0.975,mean=-2,sd=sqrt(2.5/100))
qnorm(0.975,mean=-2,sd=sqrt(2.5/100),lower.tail=FALSE)
pnorm(0.975,mean=-2,sd=sqrt(2.5/100))
dnorm(0.975,mean=-2,sd=sqrt(2.5/100))
pnorm(0.975,mean=-2,sd=sqrt(2.5/100),lower.tail=FALSE)
qnorm(0.975,mean=2,sd=sqrt(2.5/100),lower.tail=FALSE)
qnorm(0.975,mean=2,sd=sqrt(2.5/100),lower.tail=T)
qnorm(0.95,mean=2,sd=sqrt(2.5/100),lower.tail=F)
c(-1,1)*qt(0.95,16)*sqrt(3.3/9)
-4+c(-1,1)*qt(0.95,16)*sqrt(3.3/9)
-4+c(-1,1)*qt(0.95,16.lower.tail=F)*sqrt(3.3/9)
-4+c(-1,1)*qt(0.95,16,lower.tail=F)*sqrt(3.3/9)
-4+c(-1,1)*qt(0.90,16)*sqrt(3.3/9)
-4+c(-1,1)*qt(0.95,16)*sqrt(3.3/9)
-4+c(-1,1)*qt(0.95,16)*sqrt(3.3/16)
8*1.5+8*1.8
26.4/16
-4+c(-1,1)*qt(0.95,16)*1.65*sqrt(2/9)
-4+c(-1,1)*qt(0.95,16)*sqrt(2*1.65/9)
1100+c(-1,1)*qt(0.975,8)*sqrt(30/9)
1100+c(-1,1)*qt(0.975,8,lower.tail=F)*sqrt(30/9)
1100+c(-1,1)*qt(0.95,8)*sqrt(30/9)
1100+c(-1,1)*qt(0.975,8)*sqrt(30/9)
1100+c(-1,1)*qt(0.975,8)*30*sqrt(9)
1100+c(-1,1)*qt(0.975,8)*(30/sqrt(9))
rexp(40,0.2)
plo(rexp(40,0.2))
plot(rexp(40,0.2))
plot(rexp(40,0.2),mode=Line)
plot(rexp(40,0.2),mode=line)
hist(runif(1000))
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
rm()
rm(all)
rm(i)
rm(mns)
setwd("C06_Stat")
setwd("Project")
rexp()
?rexp()
rexp(1000,0.2)
hist(rexp(1000,0.2))
plot(rexp(1000,0.2),type=l)
plot(rexp(1000,0.2),type="l")
library(ggplot2)
e1000<-rexp(1000,0.2)
g<-ggplot(e1000)
qplot(e1000,geom="histogram")
mean(e1000)
g<-geom_histogram(data=e1000)
qplot(e1000,geom="histogram",method="smooth")
qplot(e1000,geom="histogram",method="lm")
e1000<-rexp(1000,0.2)
qplot(e1000,geom="histogram",method="lm")
qplot(e1000,geom="histogram",method="lm",binwidth=2)
qplot(e1000,geom="histogram",method="lm",binwidth=1)
qplot(e1000,geom="histogram",method="lm",binwidth=1)
emeans<-NULL
for(z in 1:1000) emeans<-c(emeans,mean(rexp(40)))
hist(emeans)
emeans<-NULL
for(z in 1:1000) emeans<-c(emeans,mean(rexp(40,0.2)))
hist(emeans)
mean(emeans)
df<-data.frame()
df<-cbind(df,c(1:1000))
df[,1]<-c(1:1000)
?data.frame
df<-data.frame(a=c(1:1000))
head(df)
df<-data.frame(a=c(1:1000),b=rexp(1000,0.2))
head(df)
g<-ggplot(df)
g<-ggplot(df)+geom.histogram()
g<-ggplot(df)+geom_histogram()
plot(g)
g<-ggplot(df,aes(x=a))+geom_histogram()
plot(g)
g<-ggplot(df,aes(x=b))+geom_histogram()
plot(g)
g<-ggplot(df,aes(x=b))+geom_histogram()+geom_smooth(method="lm")
plot(g)
g<-ggplot(df,aes(x=b,y=a))+geom_histogram()+geom_smooth(method="lm")
plot(g)
g<-ggplot(df,aes(x=b))+geom_histogram()+geom_smooth(method="lm")
plot(g)
g<-ggplot(df,aes(x=b))+geom_histogram()
plot(g)
g<-ggplot(df,aes(x=b))+geom_histogram()+geom_density()
plot(g)
g<-ggplot(df,aes(x=b,y=a))+geom_histogram()+geom_density()
plot(g)
mean1K<-mean(e1000)
mean40<-mean(means)
cat("The sample means are",mean1K,"and",mean40)
mean1K<-mean(e1000)
mean40<-mean(emeans)
cat("The sample means are",mean1K,"and",mean40)
var(emeans)
var(e1000)
emeans<-NULL
for(z in 1:1000) emeans<-c(emeans,mean(rexp(40,0.2)))
var(emeans)
var(rexp(40,0.2))
evar<-NULL
for(y in 1:1000) evar<-c(evar,var(rexp(40,0.2)))
var(evar)
evar<-NULL
for(y in 1:1000) evar<-c(evar,var(rexp(40,0.2)))
var(evar)
head(evar)
mean(evar)
hist(evar)
hist(rexp(40,0.2))
hist_(rexp(1000,0.2))
hist(emeans)
hist(rexp(1000,0.2))
