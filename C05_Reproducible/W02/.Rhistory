y
plot(y)
plot(x,)
x
plot(x,y)
plot(y)
e
polt(e)
plot(e)
plot(e,y)
plot(e,x)
plot(y,e)
csv1url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
?download.file
download.file(csv1url,destfile="C3W1Q1.csv",method="curl")
ls
list.files
list.files()
read.table
?read.table
dt1<-read.table("C3W1Q1.csv",header=T)
head(dt1)
head(dt1$VAL)
dt1[dt1$VAL=="24"]
View(dt1)
dt1<-read.table("C3W1Q1.csv",header=T,sep=",")
head(dt1)
dt1[,.N,by=VAL]
dt1[,.N,by="VAL"]
dt1[,.N,by=dt1$VAL]
dt1[,.N,by="dt1$VAL"]
dt1[dt1$VAL=="24"]
dt1[dt1$VAL==4]
View(dt1)
names(dt1)
head(dt1$VAL)
dt1[dt1$VAL=="24"]
dt1[dt1$VAL=="24",]
head(dt1[dt1$VAL==24,])
as.numeric(dt1[dt1$VAL==24,])
csv1<-read.csv("C3W1Q1.csv")
head(dt1[dt1$VAL==24,])
head(csv1,csv1$VAL==24)
csv2<-subset(csv1,csv1$VAL==24)
View(csv2)
head(csv1,3)
?read.xlsx
library(xlsx)
??read.xlsx
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
install.packages("xlsxjars")
library(xlsx)
library(xlsx)
library(rJava)
library(xlsxjars)
library(xlsx)
xlsxurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(xlsxurl,destfile="c3w1q1.xlsx",method="curl")
xlsx1<-read.xlsx("c3w1q1.xlsx")
xlsx1<-read.xls("c3w1q1.xlsx")
?read.xlsx
xlsx1<-read.xls("c3w1q1.xlsx",1)
xlsx1<-read.xlss("c3w1q1.xlsx",1)
xlsx1<-read.xlsx("c3w1q1.xlsx",1)
View(xlsx1)
xlsx1<-read.xlsx("c3w1q1.xlsx",1,startRow=1)
View(xlsx1)
xlsx1<-read.xlsx("c3w1q1.xlsx",1,startRow=2)
View(xlsx1)
xlsx1<-read.xlsx("c3w1q1.xlsx",sheetIndex=1,startRow=2,header=T)
View(xlsx1)
cIndex<-7:15
rIndex<-18:23
xlsx1<-read.xlsx("c3w1q1.xlsx",sheetIndex=1,header=T,colIndex=cIndex,rowIndex=rIndes)
xlsx1<-read.xlsx("c3w1q1.xlsx",sheetIndex=1,header=T,colIndex=cIndex,rowIndex=rIndex)
View(xlsx1)
dat<-read.xlsx("c3w1q1.xlsx",sheetIndex=1,header=T,colIndex=cIndex,rowIndex=rIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
xmlurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
?read.xml
library(XML)
install.packages("XML")
library(XML)
?read.xml
?xmlTreeParse()
xml1<-xmlTreeParse(xmlurl,useInternal=T)
xml1<-xmlTreeParse(xmlurl,useInternal=T,method="curl")
xmlurl<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
xml1<-xmlTreeParse(xmlurl,useInternal=T)
xmlurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
downdload.file(xmlurl,destfile="c3w1q1.xml",method="curl")
download.file(xmlurl,destfile="c3w1q1.xml",method="curl")
xml1<-xmlTreeParse("c3w1q1.xml",useInternal=T)
root1<-xmlRoot(xml1)
xmlName(root1)
names(root1)
root[[1]]
root1[[1]]
root1[[1]][[1]]
xmlSApply(root1,xmlValue)
xml1<-xmlTreeParse("c3w1q1.xml",useInternal=TRUE)
root1<-xmlRoot(xml1)
root1[[1]][[1]]
zip1<-xpathSApply(root1,"//[@zipcode='21231']",xmlValue)
zip1<-xpathSApply(root1,"//zipcode='21231'",xmlValue)
zip1<-xpathSApply(root1,"//row[@zipcode='21231']",xmlValue)
head(root1$zip)
root1[[1]][[1]]$zip
root1[[1]][[1]]$zipcode
root1[[1]][[1]][[1]]
root1[[1]][[1]][[2]]
head(root[[1]],3)
head(root1[[1]],3)
zip1<-xpathSApply(root1,//zipcode,xmlValue)
zip1<-xpathSApply(root1,"//zipcode",xmlValue)
as.numeric(zip1)
zip2<-as.numeric(zip1)
head(c(zip2,zip2==23231))
?subset
zip3<-subset(zip2,zip2==21231)
?fread()
?fread
csv2url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv "
csv2url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(csv2url,destfile="c3w1q1p5.csv",method="curl")
?read.table
fread()
library(data.table)
install.packages("data.table")
library(data.table)
?fread()
csv2<-fread("c3w1q1p5.csv")
View(csv2)
DT<-fread("c3w1q1p5.csv")
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1])
rowMeans(DT)[DT$SEX==1]
rowMeans(DT)[DT$SEX==2]
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
mean(DT[DT$SEX==1,]$pwgtp15)
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
sapply(split(DT$pwgtp15,DT$SEX),mean)
csv01<-read.csv("c3w1q1.csv")
View(csv01)
csv02<-subset(csv01,csv01$VAL=2=4)
csv02<-subset(csv01,csv01$VAL==24)
View(csv02)
xml1<-xmlTreeParse("c3w1q1.xml",useInternal=T)
root1<-xmlRoot(xml1)
xpathSApply(root1,"//zipcode",xmlValue)
zip1<-xpathSApply(root1,"//zipcode",xmlValue)
zip2<-as.numeric(zip1)
zip3<-subset(zip2,zip2==21231)
acs<-read.csv("getdata_data_ss06pid.csv")
library(sqldf)
install.packages(sqldf)
library("sqldf")
install.packages("sqldf")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
q2ans<-sqldf("select pwgtp1 from acs where AGEP < 50")
View(acs)
names(acs)
q2uni<-unique(acs$AGEP)
q2uni
q2u<-sqldf("select unique AGEP from acs")
q2u<-sqldf("select distinct AGEP from acs")
View(`q2u`)
read.lines
readlines
library(XML)
conn<-url("http://biostat.jhsph.edu/~jleek/contact.html")
leekhtml<-readLines(conn)
close(conn)
leekurl<-"http://biostat.jhsph.edu/~jleek/contact.html"
leekhtml2<-htmlTreeParse(leekurl,useInternalNodes=T)
view(leekhtml2)
leekhtml2
names(leekhtml2)
leekhtml3<-htmlParse(leekurl)
leekhtml3
leekhtml4<-capture.output(leekhtml3)
leekhtm4{1}
leekhtm4[1]
leekhtml4[1]
nchar(leekhtml4[10])
nchar(leekhtml4[20])
nchar(leekhtml4[30])
nchar(leekhtml4[100])
nchar(leekhtml4[0])
leekhtml4[0]
head(leekhtml4,3)
leekhtml4[11]
nchar(leekhtml4[11])
leekhtml4[11]
conn<-"http://biostat.jhsph.edu/~jleek/contact.html"
conn<-url("http://biostat.jhsph.edu/~jleek/contact.html")
leekhtml5<-readLines(conn)
close(conn)
nchar(leekhtml[10])
nchar(leekhtml[20])
nchar(leekhtml[30])
nchar(leekhtml[100])
conn<-url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
close(conn)
conn<-"https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
conn<-url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
q5for<-readLines(conn)
close(conn)
conn<-"https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
read.fwf
?read.fwf
q2for<-read.fwf(conn)
q2for<-read.fwf(conn,widths=c(9,4,4,4,4,4,4,4,4),header=T,sep=" ",skip=3)
q2for<-read.fwf("getdata_wksst8110.for",widths=c(9,4,4,4,4,4,4,4,4),header=T,sep=" ",skip=3)
q2for<-read.fwf("getdata_wksst8110.for",widths=c(9,4,4,4,4,4,4,4,4),header=T,sep=" ",skip=4)
q2for<-read.fwf("getdata_wksst8110.for",widths=c(9,4,4,4,4,4,4,4,4),skip=4)
q2for<-read.fwf("getdata_wksst8110.for",widths=c(9,4,4,4,4,4,4,4,4),skip=4)
head(q2for,1)
q2for<-read.fwf("getdata_wksst8110.for",widths=c(10,4,4,4,4,4,4,4,4),skip=4)
head(q2for,1)
q2for<-read.fwf("getdata_wksst8110.for",widths=c(15,4,4,4,4,4,4,4,4),skip=4)
head(q2for,1)
q2for<-read.fwf("getdata_wksst8110.for",widths=c(10,4,4,4,4,4,4,4,4),skip=4,sep="     ")
q2for<-read.fwf("getdata_wksst8110.for",widths=c(10,4,4,4,4,4,4,4,4),skip=4,sep=" ")
q2for<-read.fwf("getdata_wksst8110.for",widths=c(10,4,4,4,4,4,4,4,4),skip=4,sep="")
q2for<-read.fwf("getdata_wksst8110.for",widths=c(10,4,4,4,4,4,4,4,4),skip=4,sep="     ")
q2for<-read.fwf("getdata_wksst8110.for",widths=c(10,5,4,4,5,4,4,5,4,4,5,4,4),skip=4)
head(q2for,1)
head(q2for$V1,3)
sum(q2for$V6)
?download.file()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="c3w3q1.csv",method="curl")
q1csv<-read.csv("c3w3q1.csv")
head(q1csv,3)
head(q1csv,1)
str(q1csv)
head(q1csv,1)
summary(q1csv)
head(q1csv,1)
?dcast()
dcast
?dcast
a_which<-which(with(q1csv,ACR>=3 & AGS>=6)
)
head(a_which)
which(with(q1csv,ACR>=3 & AGS>=6))
View(`q1csv`)
a<-q1csv$ACR>=3&q1csv$AGS>=6
which(a)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile="c2w3q2.jpg")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile="c2w3q2.jpg",mothod="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile="c2w3q2.jpg",method="curl")
library(JPEG)
library(jpeg)
install.packages(jpeg)
install.packages(JPEG)
install.packages("jpeg")
?readjpeg
?readJPEG()
q2jpg<-readJPEG("c3w3q2.jpg",native=T)
library(jpeg)
?readJPEG()
q2jpg<-readJPEG("c3w3q2.jpg",native=T)
q2jpg<-readJPEG("c2w3q2.jpg",native=T)
quantile(q2jpg,probs=(0.3,0,8))
quantile(q2jpg,probs=(0.3,0.8))
quantile(q2jpg,probs=(0.3))
quantile(q2jpg,probs=(0.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",destfile="c3w3q3a.csv",method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",destfile="c3w3q3b.csv",method="curl")
q3csva<-read.csv("c3w3q3a.csv")
q3csvb<-read.csv("c3w3q3b.csv")
head(q3csva,2)
View(`q3csva`)
View(`q3csvb`)
View(`q3csva`)
q3csvc<-subset(q3csva,q3csva[5:194,1:2])
?subset
q3csvc<-q3csva[5:194,1:2]
head(q3csvc)
names(q3csvc)
names(q3csvc)<-c("CID","GDP2012")
names(q3csvc)
head(q3csvc)
View(`q3csvb`)
?merge
q3merge<-merge(q3csvc,q3csvb,by.x="CID",by.y="CountryCode",all=T)
View(`q3merge`)
which(q3merge!=NA)
which(q3merge$GDP2012!=NA)
q3merge2<-subset(q3merge,!is.na(q3merge$GDP2012))
View(`q3merge2`)
?sort
?order
q3merge3<-order(q3merge2,decreasing=T)
q3merge3<-q3merge2[with(q3merge2,order(-GDP2012)),]
View(`q3merge3`)
q3merge3<-q3merge2[order(-q3merge2$GDP2012)]
q3merge3<-q3merge2[order(-q3merge[,2])]
q3merge3<-q3merge2[order(-q3merge2[,2])]
class(q3merge2$GDP2012)
q3merge3<-q3merge2[order(-q3merge2[,3])]
q3merge2[order(-GDP2012)]
q3merge2[order(-q3merge2$GDP2012)]
class(q3merge2)
names(q3merge2)
q3merge3<-q3merge2[order(-GDP2012),]
q3merge3<-q3merge2[order(-q3merge2$GDP2012),]
View(`q3merge3`)
q3merge2a<-q3merge2
as.numeric(q3merge2a$GDP2012)
class(13merge2a$GDP2012)
class(q3merge2a$GDP2012)
q3merge2b<-as.numeric(q3merge2a$GDP2012)
View(`q3merge2a`)
q3merge2b<-sapply(q3merge2a[,3],as.numeric)
q3merge2a<-sapply(q3merge2a[,3],as.numeric)
q3merge2a<-sapply(q3merge2[,3],as.numeric(as.character()))
q3merge2a<-q3merge2
q3merge2a$GDP2012<-as.numeric(q3merge2a$GDP2012)
calss(q3merge2a$GDP2012)
class(q3merge2a$GDP2012)
q3merge3<-q3merge2a[order(-GDP2012),]
q3merge3<-q3merge2a[order(-q3merge2a$GDP2012),]
View(`q3merge3`)
View(`q3merge`)
q3merge1<-q3merge
q3merge1$GDP2012<-as.numeric(q3merge1$GDP2012)
q3merge3<-q3merge1[order(q3merge1$GDP2012,na.last=T,decreasing=T)]
q3merge3<-q3merge1[order(q3merge1$GDP2012,na.last=T,decreasing=T),]
View(`q3merge3`)
View(`q3csvc`)
q3csvd<-q3csvc[,2:3]
q3csvd<-q3csvc(,2:3)
q3csvd<-q3csvc[,2:3]
q3csvd<-q3csvc[1:190,2:3]
q3csvd<-q3csvc[1:190,1:3]
View(`q3csvb`)
View(`q3merge`)
View(`q3merge3`)
View(`q3merge2`)
?sort
q3merge3<-q3merge2[sort(q3merge2$GDP2012,decreasing=T),]
View(`q3merge3`)
View(`q3merge2`)
q3merge2a<-q3merge2
q3merge2a$GDP2012<-as.numeric(q3merge2a$GDP2012)
q3merge3<-q3merge2a[sort(q3merge2a$GDP2012,decreasing=T),]
View(`q3merge3`)
View(`q3merge2a`)
View(`q3merge2`)
q3merge2a<-q3merge2
View(`q3merge2a`)
q3merge3<-q3merge2a[sort(q3merge2a$GDP2012,decreasing=T),]
View(`q3merge3`)
class(q3merge2a$GDP2012)
q3merge2a$GDP2012<-as.numeric(q3merge2a$GDP2012)
class(q3merge2a$GDP2012)
q3merge3<-q3merge2a[sort(q3merge2a$GDP2012,decreasing=T),]
View(`q3merge3`)
View(`q3merge2a`)
q3merge2b<-q3merge2
q3merge2b$GDP2012<-as.numeric(as.character(q3merge2b$GDP2012))
View(`q3merge2b`)
class(q3merge2b$GDP2012)
q3merge3<-q3merge2b[sort(q3merge2b$GDP2012,decreasing=T),]
View(`q3merge3`)
q3merge3<-q3merge2b[order(q3merge2b$GDP2012,decreasing=T),]
View(`q3merge3`)
View(`q3csvb`)
View(`q3csva`)
View(`q3merge2b`)
View(`q3merge3`)
q4g1<-subset(q3merge3,q3merge3$Income.Group=="High Income: OECD")
q4g1<-subset(q3merge3,q3merge3$Income.Group=="High income: OECD")
q4g2<-subset(q3merge3,q3merge3$Income.Group=="High income: nonOECD")
?ave
?mean
mean(q4g1$GDP2012)
mean(q4g2$GDP2012)
q3merge3a<-q3merge3
?quantile
quantile(q3merge3a,probs=seq(0,1,0.2))
quantile(q3merge3a$GDP2012,probs=seq(0,1,0.2))
q3quan<-cut(q3merge3a,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,0.2),include.lowest=T))
q3quan<-cut(q3merge3a,breaks=quantile(q3merge3a$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T))
class(q3merge3a$GDP2012)
?cut
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,0.2),include.lowest=T))
q3quan
table(q3quam)
table(q3quan)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,0.2),include.lowest=T,right=F))
table(q3quan)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,0.2),include.lowest=T,right=FALSE))
table(q3quan)
?aggregate
aggregate(q3merge3a$CID,list(Nations=q3quan),FUN=list)
class(q3merge3a$CID)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,0.2),include.lowest=F))
table(q3quan)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=F))
table(q3quan)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,length=5),include.lowest=F))
table(q3quan)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,length=6),include.lowest=F))
table(q3quan)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,length=6),include.lowest=T,right=F))
table(q3quan)
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0.01,1,length=6),include.lowest=T,right=F))
table(q3quan)
?quantile
?cut
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,length=6),include.lowest=T,right=F))
q3quan<-cut(q3merge3a$GDP2012,breaks=quantile(q3merge3a$GDP2012,probs=seq(0,1,length=6),include.lowest=T,right=T))
table(q3quan)
q3merge3b<-q3merge3a
q3merge3b$GDP2012<-as.factor(q3merge3b$GDP2012)
q3merge3b$GDP2012<-as.integer(as.character(q3merge3b$GDP2012))
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,probs=seq(0,1,length=6),include.lowest=T,right=T))
table(q3quan)
q3merge3b$GDP2012<-as.factor(q3merge3b$GDP2012)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,probs=seq(0,1,length=6),include.lowest=T,right=T))
q3merge3b$GDP2012<-as.integer(as.character(q3merge3b$GDP2012))
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,probs=seq(0,1,length=6),Type=1))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,probs=seq(0,1,length=6),Type=2))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,probs=seq(0,1,length=6),Type=3))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.21,0.41,0.61,0.81,1),Type=3))
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.21,0.41,0.61,0.81,1))
)
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),right=F))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),right=T))
table(q3quan)
q3merge3b$CID<-as.character(q3merge3B$CID)
q3merge3b$CID<-as.character(q3merge3b$CID)
aggregate(q3merge3b$CID,list(Nations=q3quan),FUN=list)
aggregate(q3merge3b$GDP2012,list(Nations=q3quan),FUN=list)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T,dig.lab=3))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T,dig.lab=2))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T,dig.lab=3,ordered_result=FALSE))
table(q3quan)
q3quan<-cut(q3merge3b$GDP2012,breaks=quantile(q3merge3b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T,dig.lab=3,ordered_result=T))
table(q3quan)
q3merge3c<-rbind(q3merge3b,c("XXX",0))
tail(q3merge3c)
q3quan<-cut(q3merge3c$GDP2012,breaks=quantile(q3merge3c$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T,dig.lab=3,ordered_result=T))
class(q3merge3c$GDP2012)
q3merge3c$GDP2012<-as.integer(q3merge3c$GDP2012)
q3quan<-cut(q3merge3c$GDP2012,breaks=quantile(q3merge3c$GDP2012,c(0,0.2,0.4,0.6,0.8,1),include.lowest=T,dig.lab=3,ordered_result=T))
tail(q3merge3c)
table(q3quan)
which(with(q3merge3c,GDP2012<=38 & Income.Group=="Lower middle income")
)
View(`q3merge2`)
View(`q3merge3`)
View(`q3csva`)
q3cvsd<-q3cvsa[5:235,1:2]
q3cvsd<-q3csva[5:235,1:2]
View(`q3cvsd`)
names(q3csvd)<-c("CID","GDP")
names(q3cvsd)<-c("CID","GDP")
q3csvd<-q3csvd
q3csvd<-q3cvsd
q3csvd$GDP<-as.integer(as.numeric(q3cvsd$GDP))
?merge
mergeq3<-(q3csvd,q3csvb,by.x="CID",by.y="CountryCode",all=T)
mergeq3<-merge(q3csvd,q3csvb,by.x="CID",by.y="CountryCode",all=T)
View(mergeq3)
View(`q3merge`)
View(`q3merge3`)
View(`q3csva`)
View(`q3csvd`)
View(`q3csvc`)
View(`q3merge`)
View(`q3merge2`)
View(`q3merge`)
mergeq3<-merge(q3csvc,q3csvb,by.x="CID",by.y="CountryCode",all=F)
View(mergeq3)
mergeq3_a<-mergeq3
View(mergeq3_a)
mergeq3_a$GDP2012<-as.integer(as.character(mergeq3_a$GDP2012))
mergeq3_b<-mergeq3_a[order(-GDP2012),]
mergeq3_b<-mergeq3_a[order(-mergeq3_a$GDP2012),]
View(mergeq3_b)
q3quan_a<-cut(mergeq3_b$GDP2012,breaks=quantile(mergeq3_b$GDP2012,c(0,0.2,0.4,0.6,0.8,1),right=T,inclde.lowest=T))
table(q3quan_a)
setwd("C05_Reproducible")
setwd("W02")
?knit2html()
library(knitr)
knit2html(PA1_template.rmd,output=PA1_template.html)
knit2html(input=PA1_template.rmd,output=PA1_template.html)
knit2html(input="PA1_template.rmd",output="PA1_template.html")
